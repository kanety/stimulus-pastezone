{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import { Controller } from '@hotwired/stimulus';\nimport '@kanety/stimulus-static-actions';\n\nexport default class extends Controller {\n  static values = {\n    textToFile: Object\n  };\n  static actions = [\n    ['element', 'paste->paste']\n  ];\n\n  get input() {\n    return this.scope.findElement('input[type=file]');\n  }\n\n  paste(e) {\n    if (this.element != document.activeElement) return;\n\n    let input = this.input;\n    let files = this.convertToFiles(e.clipboardData);\n    let dt = this.buildDataTransfer(files, input.multiple);\n\n    if (dt.files.length) {\n      if (!input.disabled) {\n        this.setFiles(input, dt.files);\n        document.activeElement.blur();\n      }\n      e.preventDefault();\n    }\n  }\n\n  convertToFiles(clipboardData) {\n    let files = []\n    Array.from(clipboardData.items).forEach(item => {\n      if (item.kind == 'file') {\n        files.push(item.getAsFile(item.type));\n      } else {\n        let data = clipboardData.getData(item.type);\n        let filename = this.filenameFor(item.type);\n        if (filename) files.push(this.convertToFile(data, filename, item.type));\n      }\n    });\n    return files;\n  }\n\n  filenameFor(type) {\n    return this.textToFileValue[type] || this.textToFileValue['*'];\n  }\n\n  convertToFile(data, filename, type) {\n    let blob = new Blob([data], { type: type });\n    return new File([blob], filename, { type: type });\n  }\n\n  buildDataTransfer(files, multiple) {\n    let dt = new DataTransfer();\n    files.forEach(file => {\n      if (multiple || dt.items.length < 1) {\n        dt.items.add(file);\n      }\n    });\n    return dt;\n  }\n\n  setFiles(input, files) {\n    input.files = files;\n    input.dispatchEvent(new Event('input', { bubbles: true, cancelable: true }));\n    input.dispatchEvent(new Event('change', { bubbles: true, cancelable: true }));\n    this.dispatch('pasted', { detail: { files: files } });\n  }\n}\n"],"names":["_Class","Controller","input","this","scope","findElement","paste","e","element","document","activeElement","files","convertToFiles","clipboardData","dt","buildDataTransfer","multiple","length","disabled","setFiles","blur","preventDefault","Array","from","items","forEach","item","kind","push","getAsFile","type","data","getData","filename","filenameFor","convertToFile","textToFileValue","blob","Blob","File","DataTransfer","file","add","dispatchEvent","Event","bubbles","cancelable","dispatch","detail","values","textToFile","Object","actions"],"mappings":"+EAGe,MAAAA,UAAcC,EAAWA,WAQtC,SAAIC,GACF,OAAWC,KAACC,MAAMC,YAAY,mBAChC,CAEAC,KAAAA,CAAMC,GACJ,GAAIJ,KAAKK,SAAWC,SAASC,cAA7B,CAEA,IAAIR,EAAQC,KAAKD,MACbS,EAAQR,KAAKS,eAAeL,EAAEM,eAC9BC,EAAKX,KAAKY,kBAAkBJ,EAAOT,EAAMc,UAEzCF,EAAGH,MAAMM,SACNf,EAAMgB,WACTf,KAAKgB,SAASjB,EAAOY,EAAGH,OACxBF,SAASC,cAAcU,QAEzBb,EAAEc,iBATJ,CAWF,CAEAT,cAAAA,CAAeC,GACb,IAAIF,EAAQ,GAUZ,OATAW,MAAMC,KAAKV,EAAcW,OAAOC,QAAQC,IACtC,GAAiB,QAAbA,EAAKC,KACPhB,EAAMiB,KAAKF,EAAKG,UAAUH,EAAKI,WAC1B,CACL,IAAIC,EAAOlB,EAAcmB,QAAQN,EAAKI,MAClCG,EAAW9B,KAAK+B,YAAYR,EAAKI,MACjCG,GAAUtB,EAAMiB,KAAKzB,KAAKgC,cAAcJ,EAAME,EAAUP,EAAKI,MACnE,IAEKnB,CACT,CAEAuB,WAAAA,CAAYJ,GACV,YAAYM,gBAAgBN,IAAS3B,KAAKiC,gBAAgB,IAC5D,CAEAD,aAAAA,CAAcJ,EAAME,EAAUH,GAC5B,IAAIO,EAAO,IAAIC,KAAK,CAACP,GAAO,CAAED,KAAMA,IACpC,OAAW,IAAAS,KAAK,CAACF,GAAOJ,EAAU,CAAEH,KAAMA,GAC5C,CAEAf,iBAAAA,CAAkBJ,EAAOK,GACvB,IAAIF,EAAK,IAAI0B,aAMb,OALA7B,EAAMc,QAAQgB,KACRzB,GAAYF,EAAGU,MAAMP,OAAS,IAChCH,EAAGU,MAAMkB,IAAID,EACf,GAEK3B,CACT,CAEAK,QAAAA,CAASjB,EAAOS,GACdT,EAAMS,MAAQA,EACdT,EAAMyC,cAAc,IAAIC,MAAM,QAAS,CAAEC,SAAS,EAAMC,YAAY,KACpE5C,EAAMyC,cAAc,IAAIC,MAAM,SAAU,CAAEC,SAAS,EAAMC,YAAY,KACrE3C,KAAK4C,SAAS,SAAU,CAAEC,OAAQ,CAAErC,MAAOA,IAC7C,EACDX,EAlEQiD,OAAS,CACdC,WAAYC,QACbnD,EACMoD,QAAU,CACf,CAAC,UAAW"}